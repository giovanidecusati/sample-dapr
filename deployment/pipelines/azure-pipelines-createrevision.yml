# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  vmImage: ubuntu-latest

parameters:
- name: tag
  type: string

variables:
  - name: basketApiImageName
    value: 'crgiodaprlabause.azurecr.io/nwd-basket-api'
  - name: inventoryApiImageName
    value: 'crgiodaprlabause.azurecr.io/nwd-inventory-api'
  - name: ordersApiImageName
    value: 'crgiodaprlabause.azurecr.io/nwd-orders-api'
  - group: DAPR-LAB
 
steps:

- task: AzureCLI@2
  displayName: 'Install extensions'
  inputs:
    azureSubscription: 'azuredevops-giovanidecusati-spn'
    scriptType: 'pscore'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az extension add --name containerapp --upgrade
      az provider register --namespace Microsoft.App
      az provider register --namespace Microsoft.App

- task: AzureCLI@2
  displayName: 'Creating new revision for basket-api'
  inputs:
    azureSubscription: 'azuredevops-giovanidecusati-spn'
    scriptType: 'pscore'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az containerapp up --name 'ca-giodapr-lab-ause-basketapi' --resource-group '$(ResourceGroupName)' --image '$(basketApiImageName):$(parameters.tag)' --target-port 80

- task: AzureCLI@2
  displayName: 'Creating new revision for inventory-api'
  inputs:
    azureSubscription: 'azuredevops-giovanidecusati-spn'
    scriptType: 'pscore'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az containerapp up --name 'ca-giodapr-lab-ause-inventoryapi' --resource-group '$(ResourceGroupName)' --image '$(inventoryApiImageName):$(parameters.tag)' --target-port 80

- task: AzureCLI@2
  displayName: 'Creating new revision for orders-api'
  inputs:
    azureSubscription: 'azuredevops-giovanidecusati-spn'
    scriptType: 'pscore'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az containerapp up --name 'ca-giodapr-lab-ause-ordersapi' --resource-group '$(ResourceGroupName)' --image '$(ordersApiImageName):$(parameters.tag)' --target-port 80